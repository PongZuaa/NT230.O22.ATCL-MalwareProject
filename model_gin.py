import torch
import torch.nn as nn
import torch.nn.functional as F
import torch_geometric.data

# Định nghĩa lớp mô hình GIN
class GINConv(torch.nn.Module):
    def __init__(self, in_channels, out_channels):
        super(GINConv, self).__init__()
        self.mlp = nn.Sequential(
            nn.Linear(in_channels, out_channels),
            nn.BatchNorm1d(out_channels),
            nn.ReLU(),
            nn.Linear(out_channels, out_channels),
            nn.BatchNorm1d(out_channels)
        )

    def forward(self, x, edge_index):
        return self.mlp(x)

class GIN(nn.Module):
    def __init__(self):
        super(GIN, self).__init__()
        self.conv1 = GINConv(in_channels=384, out_channels=128)
        self.conv2 = GINConv(in_channels=128, out_channels=256)
        self.conv3 = GINConv(in_channels=256, out_channels=512)
        self.lin = nn.Linear(512, 2)
        self.dropout = nn.Dropout(0.5)

    def forward(self, x, edge_index, batch):
        x = self.conv1(x, edge_index)
        x = F.relu(x)
        x = self.dropout(x)
        x = self.conv2(x, edge_index)
        x = F.relu(x)
        x = self.dropout(x)
        x = self.conv3(x, edge_index)
        x = F.relu(x)
        x = self.dropout(x)
        x = torch_geometric.nn.global_add_pool(x, batch)
        x = self.lin(x)
        return F.log_softmax(x, dim=1)
